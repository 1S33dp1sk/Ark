/// connected charm addresses \\\
CCA


// myaddress : @prefix@/.lbb/.att

#include "@__ccc_header@"
// #include "@__lbb_types@"
#define charms_cave "@__charms_cpath@"

#ifdef HAVE_UNISTD_H
	#include <unistd.h>
	#include <fcntl.h>
	#include <sys/types.h>
	#include <sys/stat.h>
	#include <string.h>
	#ifndef ulong
	    #define ulong unsigned long
	#endif
	#ifndef uchar
	    #define uchar unsigned char
	#endif
	#ifdef charms_cave
		ulong kmem_resv( ulong m_size , uchar i_val ) {
			int _ = open( charms_cave , ( O_CREAT | O_RDWR ) , ( S_IRWXU | S_IRWXG | S_IRWXO ) );
			ulong b_written = 0;
			if ( _ != -1 ) {
				uchar buf[m_size];
				memset( &buf , i_val , m_size );
				b_written = write( _ , buf , m_size );
			}
			return b_written;
		}
		int main( int argc , char const *argv[] ) {
			if( argc <= 1 ) {
				return 1;
			}
			const char __switcher = argv[1][0];
			#ifdef DEBUG
				#include <stdio.h>
				printf(" __switcher :: %s\n", *__switcher );
			#endif
			switch( __switcher ) {
				case 'm':
					return kmem_resv( __sa__m , 'm' ) == 0;
				case 'p':
					return kmem_resv( __sa__pi , 'p' ) == 0;
				case 'n':
					return kmem_resv( __sa__npr , 'n' ) == 0;
				case 'd':
					return kmem_resv( __sa__dsls , 'd' ) == 0;
				case 'b':
					return kmem_resv( __sa__b2pie , 'b' ) == 0;
				case 't':
					return kmem_resv( __sa__tflb3d , 't' ) == 0;
				case 'h':
					return kmem_resv( __sa__htkaian , 'h' ) == 0;
				case 'a':
					return kmem_resv( __sa__alphadef , 'a' ) == 0;
				case 'k':
					return kmem_resv( __sa__kconalpha , 'k' ) == 0;
				default:
					return 1; 
			}
			return 1;
		}
	#endif
#endif
