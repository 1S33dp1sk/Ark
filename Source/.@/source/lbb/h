#ifndef __LBB__H
	#include <stdio.h>
	#include <unistd.h>
	#include <string.h>
	#include <sys/types.h>
	#include <sys/stat.h>
	#include <fcntl.h>
	#include <stdarg.h>
	#include "utypes.h"
	#define __lbb_cregex "\\(^[a-zA-Z0-9]*\\)[=:]\\{1,\\}\\([a-zA-Z0-9]*\\)$"
	#define __R_SEP '\n'
	#define __K_SEP '#'
	#define __V_SEP ':'
	#define __T_SEP '='
	#define __A_SEP '@'
	#define __LBB_KEY_SIZE 0x4<<0x6
	#define MAX_LBB_FIELD 512
	#define levels_supported 4
	#define __DEFAULT_LBB_NAME "/Lockfile"

	struct shard__ {
		char __charms[256];
		ulong __fd;
		ulong __size;
		ulong __iosz;
	};
typedef struct shard__ shard_st;
typedef shard_st* shard_p;

	#define stsize(x) (ulong)x.st_size
	#define stiosize(x) (ulong)x.st_blksize

	static shard_st lbb_shard;
	#define arc_shard (&lbb_shard)

	#define charms(x) (char *)x.__charms
	#define fld_shard(x) (ulong)x.__fd
	#define sze_shard(x) (ulong)x.__size
	#define ioz_shard(x) (ulong)x.__iosz

	#define shd_fd fld_shard(lbb_shard)
	#define shd_key charms(lbb_shard)
	#define shd_sze sze_shard(lbb_shard)
	#define shd_io ioz_shard(lbb_shard) 

	int lbb(char const *att_charms,ulong lockfd);

	#define __key__delim ':'
	#define __val__delim '='
	#define ref_delim ":="
	#define att_delim "=:"
	enum __delims {
		d_key=__key__delim,
		d_val=__val__delim,
		d_ref=(__key__delim+__val__delim),
		d_att=(__key__delim-__val__delim)
	};
	struct lvl_0_entry {
		char *key;
		char *value;
		enum __delims d;
	};

	static ulong lbb_index=0;

	void lbb_close(){
		close(shd_fd);
	}

	#define __LBB__H 1
#endif
