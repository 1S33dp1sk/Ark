/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AetherBonds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherBonds__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IAetherBonds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherBonds__factory>;
    getContractFactory(
      name: "IAetherCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherCall__factory>;
    getContractFactory(
      name: "ContextOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextOwner__factory>;
    getContractFactory(
      name: "IOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwner__factory>;
    getContractFactory(
      name: "IRouterCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouterCall__factory>;
    getContractFactory(
      name: "AetherCtx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherCtx__factory>;
    getContractFactory(
      name: "IAetherCtx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherCtx__factory>;
    getContractFactory(
      name: "AetherDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherDAO__factory>;
    getContractFactory(
      name: "IAetherDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherDAO__factory>;
    getContractFactory(
      name: "IMemberships",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMemberships__factory>;
    getContractFactory(
      name: "Memberships",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Memberships__factory>;
    getContractFactory(
      name: "IProposals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProposals__factory>;
    getContractFactory(
      name: "Proposals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proposals__factory>;
    getContractFactory(
      name: "IVars",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVars__factory>;
    getContractFactory(
      name: "Vars",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vars__factory>;
    getContractFactory(
      name: "AetherFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherFactory__factory>;
    getContractFactory(
      name: "IAetherFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherFactory__factory>;
    getContractFactory(
      name: "AetherHUB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherHUB__factory>;
    getContractFactory(
      name: "IAetherHUB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherHUB__factory>;
    getContractFactory(
      name: "IAetherHubV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherHubV2__factory>;
    getContractFactory(
      name: "V2AetherHub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2AetherHub__factory>;
    getContractFactory(
      name: "IKeeperAether",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeeperAether__factory>;
    getContractFactory(
      name: "IIndex",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIndex__factory>;
    getContractFactory(
      name: "Index",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Index__factory>;
    getContractFactory(
      name: "KeeperAether",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperAether__factory>;
    getContractFactory(
      name: "ITracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITracker__factory>;
    getContractFactory(
      name: "Tracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tracker__factory>;
    getContractFactory(
      name: "ITransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransaction__factory>;
    getContractFactory(
      name: "Transaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transaction__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "XAether",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAether__factory>;
    getContractFactory(
      name: "Access",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Access__factory>;
    getContractFactory(
      name: "IAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccess__factory>;
    getContractFactory(
      name: "AetherNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherNode__factory>;
    getContractFactory(
      name: "IAetherNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherNode__factory>;
    getContractFactory(
      name: "AetherProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherProxy__factory>;
    getContractFactory(
      name: "IAetherProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherProxy__factory>;
    getContractFactory(
      name: "AetherRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherRouter__factory>;
    getContractFactory(
      name: "IAetherRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherRouter__factory>;
    getContractFactory(
      name: "AetherToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AetherToken__factory>;
    getContractFactory(
      name: "IAetherToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAetherToken__factory>;

    getContractAt(
      name: "AetherBonds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherBonds>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IAetherBonds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherBonds>;
    getContractAt(
      name: "IAetherCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherCall>;
    getContractAt(
      name: "ContextOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextOwner>;
    getContractAt(
      name: "IOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwner>;
    getContractAt(
      name: "IRouterCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRouterCall>;
    getContractAt(
      name: "AetherCtx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherCtx>;
    getContractAt(
      name: "IAetherCtx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherCtx>;
    getContractAt(
      name: "AetherDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherDAO>;
    getContractAt(
      name: "IAetherDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherDAO>;
    getContractAt(
      name: "IMemberships",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMemberships>;
    getContractAt(
      name: "Memberships",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Memberships>;
    getContractAt(
      name: "IProposals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProposals>;
    getContractAt(
      name: "Proposals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proposals>;
    getContractAt(
      name: "IVars",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVars>;
    getContractAt(
      name: "Vars",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vars>;
    getContractAt(
      name: "AetherFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherFactory>;
    getContractAt(
      name: "IAetherFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherFactory>;
    getContractAt(
      name: "AetherHUB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherHUB>;
    getContractAt(
      name: "IAetherHUB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherHUB>;
    getContractAt(
      name: "IAetherHubV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherHubV2>;
    getContractAt(
      name: "V2AetherHub",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2AetherHub>;
    getContractAt(
      name: "IKeeperAether",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeeperAether>;
    getContractAt(
      name: "IIndex",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIndex>;
    getContractAt(
      name: "Index",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Index>;
    getContractAt(
      name: "KeeperAether",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperAether>;
    getContractAt(
      name: "ITracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITracker>;
    getContractAt(
      name: "Tracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Tracker>;
    getContractAt(
      name: "ITransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransaction>;
    getContractAt(
      name: "Transaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Transaction>;
    getContractAt(
      name: "ITreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "Treasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;
    getContractAt(
      name: "XAether",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XAether>;
    getContractAt(
      name: "Access",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Access>;
    getContractAt(
      name: "IAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccess>;
    getContractAt(
      name: "AetherNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherNode>;
    getContractAt(
      name: "IAetherNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherNode>;
    getContractAt(
      name: "AetherProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherProxy>;
    getContractAt(
      name: "IAetherProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherProxy>;
    getContractAt(
      name: "AetherRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherRouter>;
    getContractAt(
      name: "IAetherRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherRouter>;
    getContractAt(
      name: "AetherToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AetherToken>;
    getContractAt(
      name: "IAetherToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAetherToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
