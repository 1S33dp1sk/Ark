/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HubTest, HubTestInterface } from "../HubTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ABlockNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "ABlockMasterHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ABlockTxnCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes20",
        name: "ABlockAethering",
        type: "bytes20",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NBlockNum",
        type: "uint256",
      },
    ],
    name: "ABlockBind",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes16",
        name: "ATxnHash",
        type: "bytes16",
      },
    ],
    name: "ATxnReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes16",
        name: "ATxnHash",
        type: "bytes16",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ATxnResult",
        type: "bool",
      },
    ],
    name: "ATxnRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ANodeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ANodePos",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ANodesPtr",
        type: "uint256",
      },
    ],
    name: "NodeRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k1",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "k2",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "k3",
        type: "uint256",
      },
      {
        internalType: "bytes20",
        name: "k4",
        type: "bytes20",
      },
      {
        internalType: "uint256",
        name: "k5",
        type: "uint256",
      },
    ],
    name: "ablockbind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "k1",
        type: "bytes16",
      },
    ],
    name: "atxnreceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "k1",
        type: "bytes16",
      },
      {
        internalType: "bool",
        name: "k2",
        type: "bool",
      },
    ],
    name: "atxnrequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "k1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "k2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "k3",
        type: "uint256",
      },
    ],
    name: "noderegistered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105f9806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dd40d3c14610051578063ea45c3df1461006d578063f0e1771d14610089578063f382874b146100a5575b600080fd5b61006b6004803603810190610066919061028b565b6100c1565b005b610087600480360381019061008291906102b4565b6100fb565b005b6100a3600480360381019061009e919061023c565b610138565b005b6100bf60048036038101906100ba91906102f0565b610178565b005b7fb1755fadd292bb4b8cd68978b6fd37833e237a8f816d471c06966bf3678e6cb6816040516100f091906103f8565b60405180910390a150565b7fe9f6deb89f0d313ac1082bb556aafc600ede8b73997720822b24c8f77dc7a612828260405161012c929190610413565b60405180910390a15050565b7f99140a41575033d78b1016979e49f1b8a4943ef274d75edf0dac1bc3ccbce5f783838360405161016b939291906103c1565b60405180910390a1505050565b7f075e8d5b92fc962184f1ab341dd3c0696e16fe6c2e4d418a764cef96793ee29385858585856040516101af95949392919061043c565b60405180910390a15050505050565b6000813590506101cd81610539565b92915050565b6000813590506101e281610550565b92915050565b6000813590506101f781610567565b92915050565b60008135905061020c8161057e565b92915050565b60008135905061022181610595565b92915050565b600081359050610236816105ac565b92915050565b60008060006060848603121561025157600080fd5b600061025f868287016101be565b935050602061027086828701610227565b925050604061028186828701610227565b9150509250925092565b60006020828403121561029d57600080fd5b60006102ab848285016101e8565b91505092915050565b600080604083850312156102c757600080fd5b60006102d5858286016101e8565b92505060206102e6858286016101d3565b9150509250929050565b600080600080600060a0868803121561030857600080fd5b600061031688828901610227565b955050602061032788828901610212565b945050604061033888828901610227565b9350506060610349888289016101fd565b925050608061035a88828901610227565b9150509295509295909350565b6103708161048f565b82525050565b61037f816104a1565b82525050565b61038e816104ad565b82525050565b61039d816104d9565b82525050565b6103ac81610505565b82525050565b6103bb8161052f565b82525050565b60006060820190506103d66000830186610367565b6103e360208301856103b2565b6103f060408301846103b2565b949350505050565b600060208201905061040d6000830184610385565b92915050565b60006040820190506104286000830185610385565b6104356020830184610376565b9392505050565b600060a08201905061045160008301886103b2565b61045e60208301876103a3565b61046b60408301866103b2565b6104786060830185610394565b61048560808301846103b2565b9695505050505050565b600061049a8261050f565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6105428161048f565b811461054d57600080fd5b50565b610559816104a1565b811461056457600080fd5b50565b610570816104ad565b811461057b57600080fd5b50565b610587816104d9565b811461059257600080fd5b50565b61059e81610505565b81146105a957600080fd5b50565b6105b58161052f565b81146105c057600080fd5b5056fea2646970667358221220791cd7b8e94007a3f67dcabf99141536beb53df4d4aaeed5fcf8c0d6a2f650fb64736f6c63430008040033";

export class HubTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HubTest> {
    return super.deploy(overrides || {}) as Promise<HubTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HubTest {
    return super.attach(address) as HubTest;
  }
  connect(signer: Signer): HubTest__factory {
    return super.connect(signer) as HubTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HubTestInterface {
    return new utils.Interface(_abi) as HubTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HubTest {
    return new Contract(address, _abi, signerOrProvider) as HubTest;
  }
}
