.\" (C) Copyright 2022 kj <kj@aetherlabs.io>,
.\"
.TH Aether JSONIFIER
.SH NAME
JSON PARSER
.SH DESCRIPTION
Json Library for converting Configuration Files to Json Format
.SH Usage
.IP "1." 3
Create a json handle
.IP
.nf
json_handle json = {0};
.fi
.IP "2." 3
Obtain the filename from the command line or by any other means
.IP
.nf
json.filename = (char *)argv[1];
.fi
.IP "3." 3
Pass in the handle to read the file
.IP
.nf
json_read_conf(&json);
.fi
.IP "4." 3
Call the Json Parser with the handle
.IP
.nf
json_parser(&json);
.fi
.SH EXAMPLES
.TP
.SS Complete Example
.IP
.nf
#include \[dq]json_parser.h\[dq]
int main(int argc, char const *argv[])
{   
    if( !(argc > 1) ){return 0;}
    
    1. Create a json handle 
    json_handle json = {0};
    
    2. Obtain the filename from the command line
    json.filename = (char *)argv[1];
    
    3. Pass in the handle to read the file
    json_read_conf(&json);
    
    4. Call the Json Parser with the handle
    json_parser(&json);
    
    return 0;
}
.fi
.SS Configuration File
.TP
.SS Filename : a.conf
.IP
.nf
ex1:=20,10,12
ex2:=1
ex3:=0
ex4:=Calibration,Temperature
ex5:=120
ex6:=Upgrade
.SS Terminal compilation and Execution:
.IP
.nf
Linux\[at]Desktop101:\[ti]$ gcc json_parser.c main.c -o env-conf
Linux\[at]Desktop101:\[ti]$ ./env-conf a.conf
.SS Expected Output
.IP
.nf
Linux\[at]Desktop101:\[ti]$ cat a.conf.json
.IP
.nf
{
    \[dq]ex1\[dq] :  [\[dq]20\[dq], \[dq]10\[dq], \[dq]12\[dq]],
    \[dq]ex2\[dq] :  true,
    \[dq]ex3\[dq] :  false,
    \[dq]ex4\[dq] :  [\[dq]Calibration\[dq], \[dq]Temperature\[dq]],
    \[dq]ex5\[dq] :  120,
    \[dq]ex6\[dq] : \[dq]Upgrade\[dq]
}
.fi