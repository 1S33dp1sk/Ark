/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IKeeperNodes, IKeeperNodesInterface } from "../IKeeperNodes";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "MakeNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "NodeActualized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
    ],
    name: "NodeDissolved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nodesOfOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredNodes",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IKeeperNodes__factory {
  static readonly abi = _abi;
  static createInterface(): IKeeperNodesInterface {
    return new utils.Interface(_abi) as IKeeperNodesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeeperNodes {
    return new Contract(address, _abi, signerOrProvider) as IKeeperNodes;
  }
}
