/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Memberships, MembershipsInterface } from "../Memberships";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "AetherDAO",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "VariableName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "VariableValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "VariableOscillation",
        type: "uint256",
      },
    ],
    name: "VariableAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "AetherDAO",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "VariableReference",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "VariableValue",
        type: "uint256",
      },
    ],
    name: "VariableChange",
    type: "event",
  },
  {
    inputs: [],
    name: "aetherBonds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherHUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "getAetherAddress",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "varRef",
        type: "bytes4",
      },
    ],
    name: "getLastEdit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "varName",
        type: "string",
      },
    ],
    name: "getLastEdit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "varName",
        type: "string",
      },
    ],
    name: "getVar",
    outputs: [
      {
        internalType: "uint256",
        name: "variableValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "variableName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "variableOsc",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "varRef",
        type: "bytes4",
      },
    ],
    name: "getVar",
    outputs: [
      {
        internalType: "uint256",
        name: "variableValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "variableName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "variableOsc",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "varRef",
        type: "bytes4",
      },
    ],
    name: "getVarName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "varName",
        type: "string",
      },
    ],
    name: "getVarRef",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "varName",
        type: "string",
      },
    ],
    name: "getVarVal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "varRef",
        type: "bytes4",
      },
    ],
    name: "getVarVal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isDAOMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isDAOPartner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isHolder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isNodeOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isTreasuryPartner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "enum IMemberships.Membership",
        name: "_membership",
        type: "uint8",
      },
    ],
    name: "membershipFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodeThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "varRef",
        type: "bytes4",
      },
    ],
    name: "varExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "varName",
        type: "string",
      },
    ],
    name: "varExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000606040518060400160405280600c81526020017f70726f706f73616c54696d650000000000000000000000000000000000000000815250620a0668622819a06200055060201b60201c565b50620000ad6040518060400160405280601081526020017f7369676e6572735468726573686f6c6400000000000000000000000000000000815250600262140cd06200055060201b60201c565b50620001046040518060400160405280600d81526020017f6e6f64655468726573686f6c64000000000000000000000000000000000000008152506a084595161401484a00000062784ce06200055060201b60201c565b50620001546040518060400160405280600f81526020017f6e6f64655374616b696e6754696d6500000000000000000000000000000000008152506301e1338062784ce06200055060201b60201c565b50620001a36040518060400160405280601081526020017f626f6e644d6174757269747954696d6500000000000000000000000000000000815250626ebe0062784ce06200055060201b60201c565b50620001ed6040518060400160405280601481526020017f7472616e73616374696f6e5468726573686f6c640000000000000000000000008152504560006200055060201b60201c565b50620002416040518060400160405280600f81526020017f686f6c6465725468726573686f6c64000000000000000000000000000000000081525069d3c21bcecceda100000060006200055060201b60201c565b506200028e6040518060400160405280600f81526020017f7265776172647354726561737572790000000000000000000000000000000000815250603c62140cd06200055060201b60201c565b50620002db6040518060400160405280601181526020017f74726561737572795468726573686f6c64000000000000000000000000000000815250600162784ce06200055060201b60201c565b50620003266040518060400160405280601381526020017f6465706c6574696f6e4d756c7469706c69657200000000000000000000000000815250603260006200055060201b60201c565b50620003716040518060400160405280601081526020017f6465706c6574696f6e44697669736f7200000000000000000000000000000000815250606460006200055060201b60201c565b50620003be6040518060400160405280600c81526020017f7265776172644c6564676572000000000000000000000000000000000000000081525060056203f4806200055060201b60201c565b506200040b6040518060400160405280600881526020017f67617350726963650000000000000000000000000000000000000000000000008152506023620151806200055060201b60201c565b50620004626040518060400160405280600981526020017f74617267657447617300000000000000000000000000000000000000000000008152506c0c9f2c9cd04674edea4000000060006200055060201b60201c565b50620004af6040518060400160405280601281526020017f7461726765745472616e73616374696f6e7300000000000000000000000000008152506298968060006200055060201b60201c565b50620004fc6040518060400160405280600681526020017f4d61784250420000000000000000000000000000000000000000000000000000815250600a620151806200055060201b60201c565b50620005496040518060400160405280600681526020017f4d617854504200000000000000000000000000000000000000000000000000008152506003620151806200055060201b60201c565b5062000adb565b600062000563846200076760201b60201c565b9050600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206002015414620005ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005f6906200098a565b60405180910390fd5b600082146200060f578162000612565b60015b915060405180606001604052808481526020018581526020018381525060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082015181600001556020820151816001019080519060200190620006a892919062000799565b50604082015181600201559050504260036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff167fcc182ad97b7e6767e6f1450d65d318e2dd9183580b6ef05d5d99800ec74602b2858585604051620007589392919062000946565b60405180910390a29392505050565b6000816040516020016200077c919062000920565b604051602081830303815290604052805190602001209050919050565b828054620007a79062000a13565b90600052602060002090601f016020900481019282620007cb576000855562000817565b82601f10620007e657805160ff191683800117855562000817565b8280016001018555821562000817579182015b8281111562000816578251825591602001919060010190620007f9565b5b5090506200082691906200082a565b5090565b5b80821115620008455760008160009055506001016200082b565b5090565b60006200085682620009ac565b620008628185620009b7565b935062000874818560208601620009dd565b6200087f8162000a78565b840191505092915050565b60006200089782620009ac565b620008a38185620009c8565b9350620008b5818560208601620009dd565b80840191505092915050565b6000620008d0600283620009c8565b9150620008dd8262000a89565b600282019050919050565b6000620008f7601d83620009b7565b9150620009048262000ab2565b602082019050919050565b6200091a81620009d3565b82525050565b60006200092e82846200088a565b91506200093b82620008c1565b915081905092915050565b6000606082019050818103600083015262000962818662000849565b90506200097360208301856200090f565b6200098260408301846200090f565b949350505050565b60006020820190508181036000830152620009a581620008e8565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b60005b83811015620009fd578082015181840152602081019050620009e0565b8381111562000a0d576000848401525b50505050565b6000600282049050600182168062000a2c57607f821691505b6020821081141562000a435762000a4262000a49565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f2829000000000000000000000000000000000000000000000000000000000000600082015250565b7f54686973207661726961626c6520726566206973206f63637570696564000000600082015250565b611c958062000aeb6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063779994f3116100f9578063ba85964311610097578063dc60135211610071578063dc601352146105cf578063e3a073e9146105ed578063ec2382381461060b578063eccda8df14610629576101c4565b8063ba85964314610551578063d4d7b19a1461056f578063da7095f51461059f576101c4565b80639fa59f00116100d35780639fa59f0014610491578063a74a3685146104c1578063b1e44d8f146104f1578063b3b005de14610521576101c4565b8063779994f3146104135780637bf45933146104315780639ddd6c8314610461576101c4565b806346f733f811610166578063513404291161014057806351340429146103635780635fd1cf2614610393578063689051f2146103b15780636ebd065a146103e3576101c4565b806346f733f8146102f75780635096c4391461031557806350ef7d2014610345576101c4565b80631e4433c4116101a25780631e4433c4146102355780631ecc918614610267578063206dffa014610297578063388c5a96146102c7576101c4565b8063081dd5ff146101c957806315f7aaab146101e7578063177a6ce514610217575b600080fd5b6101d1610647565b6040516101de919061187e565b60405180910390f35b61020160048036038101906101fc9190611603565b6106ff565b60405161020e9190611899565b60405180910390f35b61021f6107a1565b60405161022c919061187e565b60405180910390f35b61024f600480360381019061024a91906116ba565b610859565b60405161025e9392919061194c565b60405180910390f35b610281600480360381019061027c9190611691565b61087d565b60405161028e91906118cf565b60405180910390f35b6102b160048036038101906102ac91906116ba565b610963565b6040516102be9190611931565b60405180910390f35b6102e160048036038101906102dc9190611603565b61097d565b6040516102ee9190611899565b60405180910390f35b6102ff610a1f565b60405161030c919061187e565b60405180910390f35b61032f600480360381019061032a9190611691565b610ad7565b60405161033c9190611899565b60405180910390f35b61034d610b38565b60405161035a9190611931565b60405180910390f35b61037d60048036038101906103789190611691565b610b41565b60405161038a9190611931565b60405180910390f35b61039b610b9f565b6040516103a8919061187e565b60405180910390f35b6103cb60048036038101906103c69190611691565b610c56565b6040516103da9392919061194c565b60405180910390f35b6103fd60048036038101906103f89190611691565b610d7e565b60405161040a9190611931565b60405180910390f35b61041b610dd9565b6040516104289190611931565b60405180910390f35b61044b600480360381019061044691906116ba565b610df0565b6040516104589190611931565b60405180910390f35b61047b600480360381019061047691906116ba565b610e0a565b6040516104889190611899565b60405180910390f35b6104ab60048036038101906104a691906116ba565b610e24565b6040516104b891906118b4565b60405180910390f35b6104db60048036038101906104d691906116fb565b610e54565b6040516104e8919061187e565b60405180910390f35b61050b60048036038101906105069190611603565b610ed5565b6040516105189190611899565b60405180910390f35b61053b60048036038101906105369190611655565b610f07565b6040516105489190611899565b60405180910390f35b6105596110ae565b6040516105669190611931565b60405180910390f35b61058960048036038101906105849190611603565b6110c5565b6040516105969190611899565b60405180910390f35b6105b960048036038101906105b49190611603565b611167565b6040516105c69190611899565b60405180910390f35b6105d7611189565b6040516105e4919061187e565b60405180910390f35b6105f5611241565b6040516106029190611931565b60405180910390f35b610613611258565b604051610620919061187e565b60405180910390f35b610631611310565b60405161063e919061187e565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106af90611911565b60405180910390fd5b6106fa600160068111156106f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b6000610709611241565b610711610a1f565b73ffffffffffffffffffffffffffffffffffffffff1663d217838c846040518263ffffffff1660e01b8152600401610749919061187e565b60206040518083038186803b15801561076157600080fd5b505afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190611724565b119050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611911565b60405180910390fd5b6108546004600681111561084f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b60006060600061087061086b85610e24565b610c56565b9250925092509193909250565b606060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060010180546108de90611abd565b80601f016020809104026020016040519081016040528092919081815260200182805461090a90611abd565b80156109575780601f1061092c57610100808354040283529160200191610957565b820191906000526020600020905b81548152906001019060200180831161093a57829003601f168201915b50505050509050919050565b600061097661097183610e24565b610b41565b9050919050565b60006109876110ae565b61098f610a1f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016109c7919061187e565b60206040518083038186803b1580156109df57600080fd5b505afa1580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190611724565b119050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790611911565b60405180910390fd5b610ad260056006811115610acd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b60008060026000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206002015414159050919050565b60008054905090565b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600001549050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0790611911565b60405180910390fd5b610c51600680811115610c4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b6000606060008060026000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060405180606001604052908160008201548152602001600182018054610cd390611abd565b80601f0160208091040260200160405190810160405280929190818152602001828054610cff90611abd565b8015610d4c5780601f10610d2157610100808354040283529160200191610d4c565b820191906000526020600020905b815481529060010190602001808311610d2f57829003601f168201915b505050505081526020016002820154815250509050806000015193508060200151925080604001519150509193909250565b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020549050919050565b6000610deb63779994f360e01b610b41565b905090565b6000610e03610dfe83610e24565b610d7e565b9050919050565b6000610e1d610e1883610e24565b610ad7565b9050919050565b600081604051602001610e37919061185c565b604051602081830303815290604052805190602001209050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc90611911565b60405180910390fd5b610ece826113c8565b9050919050565b6000610ee0826110c5565b80610ef05750610eef826106ff565b5b80610f005750610eff8261097d565b5b9050919050565b600060016003811115610f43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610f7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610f9257610f8b836110c5565b90506110a8565b60026003811115610fcc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115611005577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561101b57611014836106ff565b90506110a8565b600380811115611054577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561108d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156110a35761109c8361097d565b90506110a8565b600090505b92915050565b60006110c063ba85964360e01b610b41565b905090565b60006110cf610dd9565b6110d7611310565b73ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161110f919061187e565b60206040518083038186803b15801561112757600080fd5b505afa15801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f9190611724565b119050919050565b6000611172826106ff565b8061118257506111818261097d565b5b9050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f190611911565b60405180910390fd5b61123c60026006811115611237577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b600061125363e3a073e960e01b610b41565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c090611911565b60405180910390fd5b61130b60006006811115611306577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137890611911565b60405180910390fd5b6113c3600360068111156113be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6113c8565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a74a3685836040518263ffffffff1660e01b81526004016114259190611931565b60206040518083038186803b15801561143d57600080fd5b505afa92505050801561146e57506040513d601f19601f8201168201806040525081019061146b919061162c565b60015b611513573d806000811461149e576040519150601f19603f3d011682016040523d82523d6000602084013e6114a3565b606091505b5060008314156114d857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050611518565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a906118f1565b60405180910390fd5b809150505b919050565b600061153061152b846119af565b61198a565b90508281526020810184848401111561154857600080fd5b611553848285611a7b565b509392505050565b60008135905061156a81611c0a565b92915050565b60008151905061157f81611c0a565b92915050565b60008135905061159481611c21565b92915050565b6000813590506115a981611c38565b92915050565b600082601f8301126115c057600080fd5b81356115d084826020860161151d565b91505092915050565b6000813590506115e881611c48565b92915050565b6000815190506115fd81611c48565b92915050565b60006020828403121561161557600080fd5b60006116238482850161155b565b91505092915050565b60006020828403121561163e57600080fd5b600061164c84828501611570565b91505092915050565b6000806040838503121561166857600080fd5b60006116768582860161155b565b92505060206116878582860161159a565b9150509250929050565b6000602082840312156116a357600080fd5b60006116b184828501611585565b91505092915050565b6000602082840312156116cc57600080fd5b600082013567ffffffffffffffff8111156116e657600080fd5b6116f2848285016115af565b91505092915050565b60006020828403121561170d57600080fd5b600061171b848285016115d9565b91505092915050565b60006020828403121561173657600080fd5b6000611744848285016115ee565b91505092915050565b61175681611a07565b82525050565b61176581611a19565b82525050565b61177481611a25565b82525050565b6000611785826119e0565b61178f81856119eb565b935061179f818560208601611a8a565b6117a881611b7e565b840191505092915050565b60006117be826119e0565b6117c881856119fc565b93506117d8818560208601611a8a565b80840191505092915050565b60006117f1601d836119eb565b91506117fc82611b8f565b602082019050919050565b60006118146002836119fc565b915061181f82611bb8565b600282019050919050565b6000611837600e836119eb565b915061184282611be1565b602082019050919050565b61185681611a71565b82525050565b600061186882846117b3565b915061187382611807565b915081905092915050565b6000602082019050611893600083018461174d565b92915050565b60006020820190506118ae600083018461175c565b92915050565b60006020820190506118c9600083018461176b565b92915050565b600060208201905081810360008301526118e9818461177a565b905092915050565b6000602082019050818103600083015261190a816117e4565b9050919050565b6000602082019050818103600083015261192a8161182a565b9050919050565b6000602082019050611946600083018461184d565b92915050565b6000606082019050611961600083018661184d565b8181036020830152611973818561177a565b9050611982604083018461184d565b949350505050565b60006119946119a5565b90506119a08282611aef565b919050565b6000604051905090565b600067ffffffffffffffff8211156119ca576119c9611b4f565b5b6119d382611b7e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611a1282611a51565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611aa8578082015181840152602081019050611a8d565b83811115611ab7576000848401525b50505050565b60006002820490506001821680611ad557607f821691505b60208210811415611ae957611ae8611b20565b5b50919050565b611af882611b7e565b810181811067ffffffffffffffff82111715611b1757611b16611b4f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f41657468657220436f6e7472616374204944204e6f7420526f75746564000000600082015250565b7f2829000000000000000000000000000000000000000000000000000000000000600082015250565b7f726563757373696f6e2076696577000000000000000000000000000000000000600082015250565b611c1381611a07565b8114611c1e57600080fd5b50565b611c2a81611a25565b8114611c3557600080fd5b50565b60048110611c4557600080fd5b50565b611c5181611a71565b8114611c5c57600080fd5b5056fea264697066735822122028f58d238ec6e6de661aeb90542c7951c2e32ebd684d715c148b11f1da4d11a764736f6c63430008040033";

export class Memberships__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Memberships> {
    return super.deploy(overrides || {}) as Promise<Memberships>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Memberships {
    return super.attach(address) as Memberships;
  }
  connect(signer: Signer): Memberships__factory {
    return super.connect(signer) as Memberships__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipsInterface {
    return new utils.Interface(_abi) as MembershipsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Memberships {
    return new Contract(address, _abi, signerOrProvider) as Memberships;
  }
}
