#ifndef __LBB__H
	#include <string.h>
	#include <sys/types.h>
	#include <stdarg.h>
	#include "utypes.h"
	#define __lbb_cregex "\\(^[a-zA-Z0-9]*\\)[=:]\\{1,\\}\\([a-zA-Z0-9]*\\)$"
	#define __R_SEP '\n'
	#define __K_SEP '#'
	#define __V_SEP ':'
	#define __T_SEP '='
	#define __A_SEP '@'
	#define __LBB_KEY_SIZE 0x4<<0x6
	#define MAX_LBB_FIELD 512
	#define levels_supported 4

	struct shard__ {
		char __key[256];
		ulong __fd;
		ulong __size;
		ulong __iosz;
	};
typedef struct shard__ shard_st;
typedef shard_st* shard_p;

	#define stsize(x) (ulong)x.st_size
	#define stiosize(x) (ulong)x.st_blksize

	static shard_st LBB_SHARD;
	#define arc_shard (&LBB_SHARD)

	#define key_shard(x) (char *)x.__key
	#define fld_shard(x) (ulong)x.__fd
	#define sze_shard(x) (ulong)x.__size
	#define ioz_shard(x) (ulong)x.__iosz

	#define shd_fd fld_shard(LBB_SHARD)
	#define shd_key key_shard(LBB_SHARD)
	#define shd_sze sze_shard(LBB_SHARD)
	#define shd_io sze_shard(LBB_SHARD) 

	int lbb();

	#define __LBB__H 1
#endif






