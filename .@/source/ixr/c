/// IXR \\\
the indexer

#ifndef __IXR__H
#include "ixr.h"
#endif


#ifndef __ixr_name
	#define __ixr_name "indexer"
static const char *__ixr_frame="@charms/.lbb";
static const char *IXR_KV_FMT="K:V";
static const char *__KVFMT="%lx@%s\n";
static const char *IXR_KVP_FMT="%s=P";
static const char *IXR_KVPS_FMT="%s:=S";
static const char *IXR_KVPSD_FMT="%s=:D";

#define KV_SEP ':'
#define ENV_SEP '='
#define ATT_SEP

#define uc_size(x) ((ulong)(x*sizeof(uchar)))



	ulong __index_increment() {
		__cindex+=1;
		return __cindex;
	}

	ulong indexer_start(){
		if(__cindex!=0){
			return 0;
		};
#ifndef INDEXER
	#define INDEXER __cindex;
#endif
		return __index_increment();
	};


	ulong  __indexer__(char *idxnr) {
		int ixr_fd=open(__ixr_frame,(O_RDWR|O_APPEND|O_CREAT|O_EXCL|O_NOFOLLOW_ANY),(S_IRWXU|S_IXGRP|S_IXOTH));
		printf("file descriptor :open::%d\n",ixr_fd);
		if(ixr_fd==-1){
			return 0;
		};
		__ixr_fd=ixr_fd;
		printf("indexer field :%s::%lu\n",idxnr,__cindex);
		OUT_ASCII(__ixr_fd,idxnr);
		return indexer_start()==0?0:__cindex;
	};


	ulong __set_start(char *__idxnr) {
		__TEXT(Starting ATP '@Protocol');
		return __indexer__(__idxnr);
	}

	ulong __set_next(char *__head){
		#ifdef DEBUG
			printf("fd in set next :: %lu",__ixr_fd);
		#endif
		ulong __len=strlen(__head);
		ulong res=write(__ixr_fd,__head,__len);
		return res;
	};

char *__gdelim(gev __gtype) {
	char __delim[3];
	memset(&__delim,0,3);
	__delim[2]='\0';
	switch(__gtype){
		case __key_value:
			__delim[0]=KV_SEP;
			__delim[1]='\0';
			break;
		case __env_var:
			__delim[0]=ENV_SEP;
			__delim[1]='\0';
			break;
		case __sok_address:
			__delim[0]=KV_SEP;
			__delim[1]=ENV_SEP;
			break;
		case __description:
			__delim[0]=ENV_SEP;
			__delim[1]=KV_SEP;
			break;
		default:break;
	}
	return strdup(__delim);
};

	char *__generic_fmt(gev g_type,char *__key, char *__value){
		ulong klen=strlen(__key);
		ulong vlen=strlen(__value);
		ulong clen=klen+vlen+2;

		char lbb_field[clen];
		memset(&lbb_field,0,clen);
		lbb_field[clen]='\0';
		memmove(lbb_field,__key,klen);
		char *_delim=__gdelim(g_type);
		ulong __dlen=strlen(_delim);

		switch(__dlen){
		case 0: return NULL;
		case 1: memset((lbb_field+klen),*_delim,1); memmove((lbb_field+klen+1),__value,vlen);
		case 2: memset((lbb_field+klen),*_delim++,1);memset((lbb_field+klen),*_delim,1); memmove((lbb_field+klen+2),__value,vlen);
		default: return NULL;
		}

		return strdup(lbb_field);
	};


	ulong __set_comp(char *__eof_seq){
		ulong eslen=strlen(__eof_seq);ulong esqlen=eslen+2;
		char __[esqlen];
		memset(&__,0,esqlen);
		memmove(__,__eof_seq,eslen);
		memmove((__+eslen),"\n\0",2);
		ulong res=__set_next(__);
		close(__ixr_fd);

		return res;
	}






























































#endif