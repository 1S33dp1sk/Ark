/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KeeperNodes, KeeperNodesInterface } from "../KeeperNodes";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "MakeNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "NodeActualized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
    ],
    name: "NodeDissolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "RRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "R0xA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "RNative",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "RTarget",
        type: "uint256",
      },
    ],
    name: "ReservesAdapted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "TreasuryTarget",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "TargetTransactions",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "aetherBonds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherHUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondsEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buybackEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "getAetherAddress",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodesEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node_owner",
        type: "address",
      },
    ],
    name: "nodesOfOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredNodes",
    outputs: [
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spwanNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b504660028190555061154d806100276000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063893b854d116100c3578063b00a98ec1161007c578063b00a98ec14610378578063b22c7d5814610396578063d217838c146103b5578063dc601352146103e5578063ec23823814610403578063eccda8df1461042157610158565b8063893b854d146102b15780638df92bba146102cf5780639592d424146102ee5780639a8a05921461030c578063a74a36851461032a578063ad008f491461035a57610158565b806346f733f81161011557806346f733f8146101fd57806350ef7d201461021b5780635a08bd17146102395780635fd1cf26146102575780636ffac4a71461027557806377f9653e1461029357610158565b8063081dd5ff1461015d5780631629ff001461017b578063177a6ce5146101855780631f0ec1a0146101a357806328f5c277146101c15780633cc3be66146101df575b600080fd5b61016561043f565b60405161017291906111c8565b60405180910390f35b6101836104f7565b005b61018d6105ed565b60405161019a91906111c8565b60405180910390f35b6101ab6106a5565b6040516101b89190611245565b60405180910390f35b6101c96106cd565b6040516101d69190611245565b60405180910390f35b6101e76106f1565b6040516101f49190611245565b60405180910390f35b61020561070c565b60405161021291906111c8565b60405180910390f35b6102236107c4565b6040516102309190611245565b60405180910390f35b6102416107cd565b60405161024e9190611245565b60405180910390f35b61025f610866565b60405161026c91906111c8565b60405180910390f35b61027d61091d565b60405161028a9190611245565b60405180910390f35b61029b610945565b6040516102a891906111e3565b60405180910390f35b6102b9610ab6565b6040516102c69190611245565b60405180910390f35b6102d7610ada565b6040516102e5929190611260565b60405180910390f35b6102f6610aeb565b6040516103039190611245565b60405180910390f35b610314610af5565b6040516103219190611245565b60405180910390f35b610344600480360381019061033f919061108d565b610aff565b60405161035191906111c8565b60405180910390f35b610362610b80565b60405161036f9190611245565b60405180910390f35b610380610ba4565b60405161038d9190611245565b60405180910390f35b61039e610ba9565b6040516103ac929190611260565b60405180910390f35b6103cf60048036038101906103ca919061103b565b610bc4565b6040516103dc9190611245565b60405180910390f35b6103ed610bcb565b6040516103fa91906111c8565b60405180910390f35b61040b610c83565b60405161041891906111c8565b60405180910390f35b610429610d3b565b60405161043691906111c8565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a790611225565b60405180910390fd5b6104f2600160068111156104ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b60016008600082825461050a91906112d3565b92505081905550610519610c83565b73ffffffffffffffffffffffffffffffffffffffff166369b4b5846040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190611064565b60076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561065e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065590611225565b60405180910390fd5b6106a06004600681111561069b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b600060326103e86106b4610ab6565b6106be919061135a565b6106c89190611329565b905090565b60008060006106da610ba9565b9150915080826106ea9190611329565b9250505090565b600060146106fd610ab6565b6107079190611329565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490611225565b60405180910390fd5b6107bf600560068111156107ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b60008054905090565b60006003546107da610bcb565b73ffffffffffffffffffffffffffffffffffffffff16632cb0e40d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561081f57600080fd5b505afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085791906110b6565b6108619190611329565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611225565b60405180910390fd5b610918600680811115610913577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b6000601e6103e861092c610ab6565b610936919061135a565b6109409190611329565b905090565b6060600060085490505b600a81111561097b57600a816109659190611329565b905060018161097491906112d3565b905061094f565b8067ffffffffffffffff8111156109bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109e95781602001602082028036833780820191505090505b50915060005b81811015610ab1576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838281518110610a64577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080610aa9906113f0565b9150506109ef565b505090565b6000806000610ac3610ba9565b915091508082610ad39190611329565b9250505090565b600080600354600454915091509091565b6000600854905090565b6000600254905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6790611225565b60405180910390fd5b610b7982610df3565b9050919050565b6000806000610b8d610ada565b915091508082610b9d9190611329565b9250505090565b600090565b600080610bb4610f48565b610bbc610fdf565b915091509091565b6000919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390611225565b60405180910390fd5b610c7e60026006811115610c79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ceb90611225565b60405180910390fd5b610d3660006006811115610d31577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610dac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da390611225565b60405180910390fd5b610dee60036006811115610de9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610df3565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a74a3685836040518263ffffffff1660e01b8152600401610e509190611245565b60206040518083038186803b158015610e6857600080fd5b505afa925050508015610e9957506040513d601f19601f82011682018060405250810190610e969190611064565b60015b610f3e573d8060008114610ec9576040519150601f19603f3d011682016040523d82523d6000602084013e610ece565b606091505b506000831415610f0357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050610f43565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3590611205565b60405180910390fd5b809150505b919050565b6000610f52610d3b565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f8a91906111c8565b60206040518083038186803b158015610fa257600080fd5b505afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda91906110b6565b905090565b600047905090565b600081359050610ff6816114e9565b92915050565b60008151905061100b816114e9565b92915050565b60008135905061102081611500565b92915050565b60008151905061103581611500565b92915050565b60006020828403121561104d57600080fd5b600061105b84828501610fe7565b91505092915050565b60006020828403121561107657600080fd5b600061108484828501610ffc565b91505092915050565b60006020828403121561109f57600080fd5b60006110ad84828501611011565b91505092915050565b6000602082840312156110c857600080fd5b60006110d684828501611026565b91505092915050565b60006110eb83836110f7565b60208301905092915050565b611100816113b4565b82525050565b61110f816113b4565b82525050565b600061112082611299565b61112a81856112b1565b935061113583611289565b8060005b8381101561116657815161114d88826110df565b9750611158836112a4565b925050600181019050611139565b5085935050505092915050565b6000611180601d836112c2565b915061118b82611497565b602082019050919050565b60006111a3600e836112c2565b91506111ae826114c0565b602082019050919050565b6111c2816113e6565b82525050565b60006020820190506111dd6000830184611106565b92915050565b600060208201905081810360008301526111fd8184611115565b905092915050565b6000602082019050818103600083015261121e81611173565b9050919050565b6000602082019050818103600083015261123e81611196565b9050919050565b600060208201905061125a60008301846111b9565b92915050565b600060408201905061127560008301856111b9565b61128260208301846111b9565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112de826113e6565b91506112e9836113e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561131e5761131d611439565b5b828201905092915050565b6000611334826113e6565b915061133f836113e6565b92508261134f5761134e611468565b5b828204905092915050565b6000611365826113e6565b9150611370836113e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113a9576113a8611439565b5b828202905092915050565b60006113bf826113c6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113fb826113e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561142e5761142d611439565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f41657468657220436f6e7472616374204944204e6f7420526f75746564000000600082015250565b7f726563757373696f6e2076696577000000000000000000000000000000000000600082015250565b6114f2816113b4565b81146114fd57600080fd5b50565b611509816113e6565b811461151457600080fd5b5056fea264697066735822122058d0927a12d6171a2d0c5f542049dece5975a2e2396b83583883b699ba89108364736f6c63430008040033";

export class KeeperNodes__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KeeperNodes> {
    return super.deploy(overrides || {}) as Promise<KeeperNodes>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KeeperNodes {
    return super.attach(address) as KeeperNodes;
  }
  connect(signer: Signer): KeeperNodes__factory {
    return super.connect(signer) as KeeperNodes__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperNodesInterface {
    return new utils.Interface(_abi) as KeeperNodesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperNodes {
    return new Contract(address, _abi, signerOrProvider) as KeeperNodes;
  }
}
