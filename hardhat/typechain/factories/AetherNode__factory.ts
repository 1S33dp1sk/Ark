/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AetherNode, AetherNodeInterface } from "../AetherNode";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "AccessTo",
        type: "address",
      },
    ],
    name: "AccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "AccessTo",
        type: "address",
      },
    ],
    name: "AccessRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "Owner",
        type: "address",
      },
    ],
    name: "NodeInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "AETHER_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AETHER_HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "aether_block",
        type: "bytes",
      },
    ],
    name: "executeBlock",
    outputs: [
      {
        internalType: "bool",
        name: "blockBinded",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "master_hash",
        type: "bytes32",
      },
    ],
    name: "executeMasterHash",
    outputs: [
      {
        internalType: "bool",
        name: "mhSubmitted",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "aether_txn",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "txnCommitted",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250503373ffffffffffffffffffffffffffffffffffffffff1663177a6ce56040518163ffffffff1660e01b815260040160206040518083038186803b15801561008e57600080fd5b505afa1580156100a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c69190610116565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610188565b60008151905061011081610171565b92915050565b60006020828403121561012857600080fd5b600061013684828501610101565b91505092915050565b600061014a82610151565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61017a8161013f565b811461018557600080fd5b50565b60805160601c60a05160601c610d756101d6600039600081816102520152818161050001526107c6015260008181610430015281816105640152818161082301526108f30152610d756000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806385e685311161007157806385e68531146101665780638da5cb5b14610196578063943d7209146101b4578063956e8d94146101e4578063a118f24914610202578063b91d400114610232576100a9565b806313af4035146100ae57806327781206146100ca5780632ba785d2146100fa578063373d6132146101185780635add401514610136575b600080fd5b6100c860048036038101906100c39190610abe565b610250565b005b6100e460048036038101906100df9190610b39565b6103f8565b6040516100f19190610c02565b60405180910390f35b6101026104fe565b60405161010f9190610be7565b60405180910390f35b610120610522565b60405161012d9190610c5c565b60405180910390f35b610150600480360381019061014b9190610b10565b61052c565b60405161015d9190610c02565b60405180910390f35b610180600480360381019061017b9190610abe565b61062f565b60405161018d9190610c02565b60405180910390f35b61019e610745565b6040516101ab9190610be7565b60405180910390f35b6101ce60048036038101906101c99190610b39565b6107eb565b6040516101db9190610c02565b60405180910390f35b6101ec6108f1565b6040516101f99190610be7565b60405180910390f35b61021c60048036038101906102179190610abe565b610915565b6040516102299190610c02565b60405180910390f35b61023a610a2b565b6040516102479190610c5c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461030357600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167f97492b5e72b9ce49a6924a36bf80057224c4534c684957c92be22b2410bd338f60405160405180910390a350565b6000600160149054906101000a900460ff161561041457600080fd5b60018060146101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ce5fa11384846040518363ffffffff1660e01b8152600401610489929190610c38565b602060405180830381600087803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104db9190610ae7565b90506000600160146101000a81548160ff02191690831515021790555092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600254905090565b6000600160149054906101000a900460ff161561054857600080fd5b60018060146101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bfba1a3b836040518263ffffffff1660e01b81526004016105bb9190610c1d565b602060405180830381600087803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610ae7565b90506000600160146101000a81548160ff021916908315150217905550919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068b57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167f825c8be24eb0df19500f63e86c29e7d0d951e73056b889b891d85e40938d9b6e60405160405180910390a360019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107e6565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b6000600160149054906101000a900460ff161561080757600080fd5b60018060146101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663105deb5784846040518363ffffffff1660e01b815260040161087c929190610c38565b602060405180830381600087803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190610ae7565b90506000600160146101000a81548160ff02191690831515021790555092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097157600080fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167f9f520b3bfc56d06f7065d10b4683b3f57ac8895d5026cd176dee95ce1454cb8d60405160405180910390a360019050919050565b6000600354905090565b600081359050610a4481610cfa565b92915050565b600081519050610a5981610d11565b92915050565b600081359050610a6e81610d28565b92915050565b60008083601f840112610a8657600080fd5b8235905067ffffffffffffffff811115610a9f57600080fd5b602083019150836001820283011115610ab757600080fd5b9250929050565b600060208284031215610ad057600080fd5b6000610ade84828501610a35565b91505092915050565b600060208284031215610af957600080fd5b6000610b0784828501610a4a565b91505092915050565b600060208284031215610b2257600080fd5b6000610b3084828501610a5f565b91505092915050565b60008060208385031215610b4c57600080fd5b600083013567ffffffffffffffff811115610b6657600080fd5b610b7285828601610a74565b92509250509250929050565b610b8781610c88565b82525050565b610b9681610c9a565b82525050565b610ba581610ca6565b82525050565b6000610bb78385610c77565b9350610bc4838584610cda565b610bcd83610ce9565b840190509392505050565b610be181610cd0565b82525050565b6000602082019050610bfc6000830184610b7e565b92915050565b6000602082019050610c176000830184610b8d565b92915050565b6000602082019050610c326000830184610b9c565b92915050565b60006020820190508181036000830152610c53818486610bab565b90509392505050565b6000602082019050610c716000830184610bd8565b92915050565b600082825260208201905092915050565b6000610c9382610cb0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b610d0381610c88565b8114610d0e57600080fd5b50565b610d1a81610c9a565b8114610d2557600080fd5b50565b610d3181610ca6565b8114610d3c57600080fd5b5056fea2646970667358221220133af0c9bc712910bf07fd9c65eee6cd6df4ad95d5bc6c404da979b1daf8b65864736f6c63430008040033";

export class AetherNode__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AetherNode> {
    return super.deploy(overrides || {}) as Promise<AetherNode>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AetherNode {
    return super.attach(address) as AetherNode;
  }
  connect(signer: Signer): AetherNode__factory {
    return super.connect(signer) as AetherNode__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AetherNodeInterface {
    return new utils.Interface(_abi) as AetherNodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AetherNode {
    return new Contract(address, _abi, signerOrProvider) as AetherNode;
  }
}
