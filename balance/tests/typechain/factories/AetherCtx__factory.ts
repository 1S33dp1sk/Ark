/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AetherCtx, AetherCtxInterface } from "../AetherCtx";

const _abi = [
  {
    inputs: [],
    name: "aetherBonds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherHUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "getAetherAddress",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635fd1cf26116100665780635fd1cf2614610110578063a74a36851461012e578063dc6013521461015e578063ec2382381461017c578063eccda8df1461019a57610093565b8063081dd5ff14610098578063177a6ce5146100b657806346f733f8146100d457806350ef7d20146100f2575b600080fd5b6100a06101b8565b6040516100ad919061097e565b60405180910390f35b6100be610270565b6040516100cb919061097e565b60405180910390f35b6100dc610328565b6040516100e9919061097e565b60405180910390f35b6100fa6103e0565b60405161010791906109d9565b60405180910390f35b6101186103e9565b604051610125919061097e565b60405180910390f35b610148600480360381019061014391906108f1565b6104a0565b604051610155919061097e565b60405180910390f35b610166610521565b604051610173919061097e565b60405180910390f35b6101846105d9565b604051610191919061097e565b60405180910390f35b6101a2610691565b6040516101af919061097e565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109b9565b60405180910390fd5b61026b60016006811115610266577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d8906109b9565b60405180910390fd5b6103236004600681111561031e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610399576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610390906109b9565b60405180910390fd5b6103db600560068111156103d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60008054905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561045a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610451906109b9565b60405180910390fd5b61049b600680811115610496577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610511576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610508906109b9565b60405180910390fd5b61051a82610749565b9050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610592576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610589906109b9565b60405180910390fd5b6105d4600260068111156105cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561064a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610641906109b9565b60405180910390fd5b61068c60006006811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f9906109b9565b60405180910390fd5b6107446003600681111561073f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610749565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a74a3685836040518263ffffffff1660e01b81526004016107a691906109d9565b60206040518083038186803b1580156107be57600080fd5b505afa9250505080156107ef57506040513d601f19601f820116820180604052508101906107ec91906108c8565b60015b610894573d806000811461081f576040519150601f19603f3d011682016040523d82523d6000602084013e610824565b606091505b50600083141561085957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050610899565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90610999565b60405180910390fd5b809150505b919050565b6000815190506108ad81610a93565b92915050565b6000813590506108c281610aaa565b92915050565b6000602082840312156108da57600080fd5b60006108e88482850161089e565b91505092915050565b60006020828403121561090357600080fd5b6000610911848285016108b3565b91505092915050565b61092381610a05565b82525050565b6000610936601d836109f4565b915061094182610a41565b602082019050919050565b6000610959600e836109f4565b915061096482610a6a565b602082019050919050565b61097881610a37565b82525050565b6000602082019050610993600083018461091a565b92915050565b600060208201905081810360008301526109b281610929565b9050919050565b600060208201905081810360008301526109d28161094c565b9050919050565b60006020820190506109ee600083018461096f565b92915050565b600082825260208201905092915050565b6000610a1082610a17565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f41657468657220436f6e7472616374204944204e6f7420526f75746564000000600082015250565b7f726563757373696f6e2076696577000000000000000000000000000000000000600082015250565b610a9c81610a05565b8114610aa757600080fd5b50565b610ab381610a37565b8114610abe57600080fd5b5056fea2646970667358221220967daa309f002709ea89cfe6f37da5349da2ea61b4646af343304a4795ecf1fa64736f6c63430008040033";

export class AetherCtx__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AetherCtx> {
    return super.deploy(overrides || {}) as Promise<AetherCtx>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AetherCtx {
    return super.attach(address) as AetherCtx;
  }
  connect(signer: Signer): AetherCtx__factory {
    return super.connect(signer) as AetherCtx__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AetherCtxInterface {
    return new utils.Interface(_abi) as AetherCtxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AetherCtx {
    return new Contract(address, _abi, signerOrProvider) as AetherCtx;
  }
}
