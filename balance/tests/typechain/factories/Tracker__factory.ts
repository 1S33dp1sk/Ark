/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tracker, TrackerInterface } from "../Tracker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "MakeNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReleaseTime",
        type: "uint256",
      },
    ],
    name: "NodeActualized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeFIA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NodeInitialStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NodeOwner",
        type: "address",
      },
    ],
    name: "NodeDissolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "RRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "R0xA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "RNative",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "RTarget",
        type: "uint256",
      },
    ],
    name: "ReservesAdapted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "TreasuryTarget",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "TargetTransactions",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "aetherBonds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherHUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aetherToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondsEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buybackEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depletionRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "getAetherAddress",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodesEval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node_owner",
        type: "address",
      },
    ],
    name: "nodesOfOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredNodes",
    outputs: [
      {
        internalType: "address[]",
        name: "_nodes",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spwanNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5046600281905550611595806100276000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806377f9653e116100de578063ad008f4911610097578063d217838c11610071578063d217838c146103ef578063dc6013521461041f578063ec2382381461043d578063eccda8df1461045b57610173565b8063ad008f4914610394578063b00a98ec146103b2578063b22c7d58146103d057610173565b806377f9653e146102cd578063893b854d146102eb5780638df92bba146103095780639592d424146103285780639a8a059214610346578063a74a36851461036457610173565b8063440e319811610130578063440e31981461021857806346f733f81461023757806350ef7d20146102555780635a08bd17146102735780635fd1cf26146102915780636ffac4a7146102af57610173565b8063081dd5ff146101785780631629ff0014610196578063177a6ce5146101a05780631f0ec1a0146101be57806328f5c277146101dc5780633cc3be66146101fa575b600080fd5b610180610479565b60405161018d9190611210565b60405180910390f35b61019e610531565b005b6101a8610627565b6040516101b59190611210565b60405180910390f35b6101c66106df565b6040516101d3919061128d565b60405180910390f35b6101e4610707565b6040516101f1919061128d565b60405180910390f35b61020261072b565b60405161020f919061128d565b60405180910390f35b610220610746565b60405161022e9291906112a8565b60405180910390f35b61023f610754565b60405161024c9190611210565b60405180910390f35b61025d61080c565b60405161026a919061128d565b60405180910390f35b61027b610815565b604051610288919061128d565b60405180910390f35b6102996108ae565b6040516102a69190611210565b60405180910390f35b6102b7610965565b6040516102c4919061128d565b60405180910390f35b6102d561098d565b6040516102e2919061122b565b60405180910390f35b6102f3610afe565b604051610300919061128d565b60405180910390f35b610311610b22565b60405161031f9291906112a8565b60405180910390f35b610330610b33565b60405161033d919061128d565b60405180910390f35b61034e610b3d565b60405161035b919061128d565b60405180910390f35b61037e600480360381019061037991906110d5565b610b47565b60405161038b9190611210565b60405180910390f35b61039c610bc8565b6040516103a9919061128d565b60405180910390f35b6103ba610bec565b6040516103c7919061128d565b60405180910390f35b6103d8610bf1565b6040516103e69291906112a8565b60405180910390f35b61040960048036038101906104049190611083565b610c0c565b604051610416919061128d565b60405180910390f35b610427610c13565b6040516104349190611210565b60405180910390f35b610445610ccb565b6040516104529190611210565b60405180910390f35b610463610d83565b6040516104709190611210565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e19061126d565b60405180910390fd5b61052c60016006811115610527577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b600160086000828254610544919061131b565b92505081905550610553610ccb565b73ffffffffffffffffffffffffffffffffffffffff166369b4b5846040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d291906110ac565b60076000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f9061126d565b60405180910390fd5b6106da600460068111156106d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b600060326103e86106ee610afe565b6106f891906113a2565b6107029190611371565b905090565b6000806000610714610bf1565b9150915080826107249190611371565b9250505090565b60006014610737610afe565b6107419190611371565b905090565b600080600080915091509091565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc9061126d565b60405180910390fd5b61080760056006811115610802577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b60008054905090565b6000600354610822610c13565b73ffffffffffffffffffffffffffffffffffffffff16632cb0e40d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561086757600080fd5b505afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f91906110fe565b6108a99190611371565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109169061126d565b60405180910390fd5b61096060068081111561095b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b6000601e6103e8610974610afe565b61097e91906113a2565b6109889190611371565b905090565b6060600060085490505b600a8111156109c357600a816109ad9190611371565b90506001816109bc919061131b565b9050610997565b8067ffffffffffffffff811115610a03577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610a315781602001602082028036833780820191505090505b50915060005b81811015610af9576007600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838281518110610aac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080610af190611438565b915050610a37565b505090565b6000806000610b0b610bf1565b915091508082610b1b9190611371565b9250505090565b600080600354600454915091509091565b6000600854905090565b6000600254905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf9061126d565b60405180910390fd5b610bc182610e3b565b9050919050565b6000806000610bd5610b22565b915091508082610be59190611371565b9250505090565b600090565b600080610bfc610f90565b610c04611027565b915091509091565b6000919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b9061126d565b60405180910390fd5b610cc660026006811115610cc1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d339061126d565b60405180910390fd5b610d7e60006006811115610d79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb9061126d565b60405180910390fd5b610e3660036006811115610e31577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e3b565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a74a3685836040518263ffffffff1660e01b8152600401610e98919061128d565b60206040518083038186803b158015610eb057600080fd5b505afa925050508015610ee157506040513d601f19601f82011682018060405250810190610ede91906110ac565b60015b610f86573d8060008114610f11576040519150601f19603f3d011682016040523d82523d6000602084013e610f16565b606091505b506000831415610f4b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050610f8b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7d9061124d565b60405180910390fd5b809150505b919050565b6000610f9a610d83565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fd29190611210565b60206040518083038186803b158015610fea57600080fd5b505afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102291906110fe565b905090565b600047905090565b60008135905061103e81611531565b92915050565b60008151905061105381611531565b92915050565b60008135905061106881611548565b92915050565b60008151905061107d81611548565b92915050565b60006020828403121561109557600080fd5b60006110a38482850161102f565b91505092915050565b6000602082840312156110be57600080fd5b60006110cc84828501611044565b91505092915050565b6000602082840312156110e757600080fd5b60006110f584828501611059565b91505092915050565b60006020828403121561111057600080fd5b600061111e8482850161106e565b91505092915050565b6000611133838361113f565b60208301905092915050565b611148816113fc565b82525050565b611157816113fc565b82525050565b6000611168826112e1565b61117281856112f9565b935061117d836112d1565b8060005b838110156111ae5781516111958882611127565b97506111a0836112ec565b925050600181019050611181565b5085935050505092915050565b60006111c8601d8361130a565b91506111d3826114df565b602082019050919050565b60006111eb600e8361130a565b91506111f682611508565b602082019050919050565b61120a8161142e565b82525050565b6000602082019050611225600083018461114e565b92915050565b60006020820190508181036000830152611245818461115d565b905092915050565b60006020820190508181036000830152611266816111bb565b9050919050565b60006020820190508181036000830152611286816111de565b9050919050565b60006020820190506112a26000830184611201565b92915050565b60006040820190506112bd6000830185611201565b6112ca6020830184611201565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113268261142e565b91506113318361142e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561136657611365611481565b5b828201905092915050565b600061137c8261142e565b91506113878361142e565b925082611397576113966114b0565b5b828204905092915050565b60006113ad8261142e565b91506113b88361142e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113f1576113f0611481565b5b828202905092915050565b60006114078261140e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114438261142e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561147657611475611481565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f41657468657220436f6e7472616374204944204e6f7420526f75746564000000600082015250565b7f726563757373696f6e2076696577000000000000000000000000000000000000600082015250565b61153a816113fc565b811461154557600080fd5b50565b6115518161142e565b811461155c57600080fd5b5056fea26469706673582212207a6ba093ddc3445ab91b58fadaf6300b5a59adc582a19463e7703fa90cb8450c64736f6c63430008040033";

export class Tracker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Tracker> {
    return super.deploy(overrides || {}) as Promise<Tracker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Tracker {
    return super.attach(address) as Tracker;
  }
  connect(signer: Signer): Tracker__factory {
    return super.connect(signer) as Tracker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrackerInterface {
    return new utils.Interface(_abi) as TrackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tracker {
    return new Contract(address, _abi, signerOrProvider) as Tracker;
  }
}
