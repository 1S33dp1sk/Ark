/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AetherStructure,
  AetherStructureInterface,
} from "../AetherStructure";

const _abi = [
  {
    inputs: [],
    name: "readVal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_v",
        type: "uint256",
      },
    ],
    name: "submitval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80635c8ae0d5146037578063bd39fc35146051575b600080fd5b603d6069565b6040516048919060c2565b60405180910390f35b6067600480360381019060639190608f565b6072565b005b60008054905090565b8060008190555050565b60008135905060898160e5565b92915050565b60006020828403121560a057600080fd5b600060ac84828501607c565b91505092915050565b60bc8160db565b82525050565b600060208201905060d5600083018460b5565b92915050565b6000819050919050565b60ec8160db565b811460f657600080fd5b5056fea26469706673582212200aa8b39cce0487c177bb070444093606f2482511a4c003ce24258a3172ef3a5764736f6c63430008040033";

export class AetherStructure__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AetherStructure> {
    return super.deploy(overrides || {}) as Promise<AetherStructure>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AetherStructure {
    return super.attach(address) as AetherStructure;
  }
  connect(signer: Signer): AetherStructure__factory {
    return super.connect(signer) as AetherStructure__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AetherStructureInterface {
    return new utils.Interface(_abi) as AetherStructureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AetherStructure {
    return new Contract(address, _abi, signerOrProvider) as AetherStructure;
  }
}
